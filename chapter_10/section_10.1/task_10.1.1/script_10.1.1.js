// Сравните два фрагмента кода.

// 1. Первый использует finally для выполнения кода после try..catch:
/*
try {
    начать работу
    работать
} catch (e) {
    обработать ошибку
} finally {
    очистить рабочее пространство
}
*/

// 2. Второй фрагмент просто ставит очистку после try..catch:
/*
try {
    начать работу
    работать
} catch (e) {
    обработать ошибку
}
  
очистить рабочее пространство
*/

// Нам определённо нужна очистка после работы, неважно возникли ошибки или нет.

// Есть ли здесь преимущество в использовании finally или оба фрагмента кода одинаковы? 
// Если такое преимущество есть, то дайте пример, когда оно проявляется.

// Ответ - преимущество есть. В случае, когда код используется внутри функции, 
// во втором случае не гарантируется выполнение кода, если
// в блоке try {...} catch {...} произойдет выход из фунции, например, return.
// В первом же случае блок finally выполнится всегда. 